# OpenVINO (object_detection_sample_ssd) manifest example

loader.preload = "file:{{ graphene.libos }}"
libos.entrypoint = "{{ openvino_dir }}/bin/intel64/{{ openvino_build }}/object_detection_sample_ssd"
loader.log_level = "{{ log_level }}"

loader.env.LD_LIBRARY_PATH = "/lib:{{ openvino_dir }}/inference-engine/temp/tbb/lib:{{ arch_libdir }}:/usr/{{ arch_libdir }}"

loader.insecure__use_cmdline_argv = true

fs.mount.lib.type = "chroot"
fs.mount.lib.path = "/lib"
fs.mount.lib.uri = "file:{{ graphene.runtimedir() }}"

fs.mount.lib2.type = "chroot"
fs.mount.lib2.path = "{{ arch_libdir }}"
fs.mount.lib2.uri = "file:{{ arch_libdir }}"

fs.mount.lib3.type = "chroot"
fs.mount.lib3.path = "/usr/{{ arch_libdir }}"
fs.mount.lib3.uri = "file:/usr/{{ arch_libdir }}"

fs.mount.etc.type = "chroot"
fs.mount.etc.path = "/etc"
fs.mount.etc.uri = "file:/etc"

fs.mount.cwd.type = "chroot"
fs.mount.cwd.path = "{{ openvino_dir }}"
fs.mount.cwd.uri = "file:{{ openvino_dir }}"

sgx.enclave_size = "2G"
sgx.thread_num = 16

sgx.trusted_files = [
  "file:{{ openvino_dir }}/bin/intel64/{{ openvino_build }}/object_detection_sample_ssd",
  "file:{{ graphene.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr/{{ arch_libdir }}/",
  "file:{{ openvino_dir }}/bin/intel64/{{ openvino_build }}/",
  "file:{{ openvino_dir }}/inference-engine/temp/",
  "file:{{ model_dir }}/VGG_VOC0712Plus_SSD_300x300_ft_iter_160000.xml",
  "file:{{ model_dir }}/VGG_VOC0712Plus_SSD_300x300_ft_iter_160000.bin",
]

sgx.allowed_files = [
  "file:images",
  "file:/etc/nsswitch.conf",
  "file:/etc/ethers",
  "file:/etc/hosts",
  "file:/etc/group",
  "file:/etc/passwd",
]
